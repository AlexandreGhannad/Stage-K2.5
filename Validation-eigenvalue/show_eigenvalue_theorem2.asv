function show_eigenvalue_theorem2(eigenvalue, features_theorem2, d1, d2)

rho_min_negative = features_theorem2(1,:);
rho_max_negative = features_theorem2(2,:);
rho_min_positive = features_theorem2(3,:);
rho_max_positive = features_theorem2(4,:);
lambda_max = features_theorem2(5,:);
lambda_min = features_theorem2(6,:);
sigma_max = features_theorem2(7,:);
sigma_min = features_theorem2(8,:);
xmax = features_theorem2(9,:);
xmin = features_theorem2(10,:);
n = (size(features_theorem2,1) - 10) /2
x = features_theorem2(11:11+n-1,1);
z = features_theorem2(11+n:end,1);

    
    % Plot negative eigenvalue
    figure()
    subplot(221)
    semilogy(rho_min_negative, "LineWidth", 3)
    hold on
    semilogy(rho_max_negative, "LineWidth", 3)
    tmp = eigenvalue';
    tmp(tmp>0) = NaN; % Positive eigenvalue are set at NaN in order to have gaps when we display them
    semilogy(tmp, "k.")
    xlabel("Iteration")
    ylabel("Eigenvalues and bounds")
    legend("Inferior negative bound", "Superior negative bound", "Eigenvalues")
    
    if exist("d1") & exist("d2")
        title("Negative eigenvalues, (d1 = " + sprintf("%7.1e", d1) + "), (d2 = " + sprintf("%7.1e", d2) + ")")
    elseif exist("d1")
        title("Negative eigenvalues, (d1 = " + sprintf("%7.1e", d1) + ")")
    elseif exist("d2")
        title("Negative eigenvalues, (d2 = " + sprintf("%7.1e", d2) + ")")
    else
        title("Negative eigenvalues)")
    end
    
    subplot(222)
    semilogy(abs(lambda_max), "LineWidth", 2, "Color", [0 0 1])
    hold on
    semilogy(abs(lambda_min), "LineWidth", 2, "Color", [0.3010 0.7450 0.9330])
        xlabel("Iteration")
        ylabel("Eigenvalue of the hessien matrix")

    subplot(223)
    semilogy(abs(sigma_max), "LineWidth", 2, "Color", [0.4660 0.6740 0.1880])
    semilogy(abs(sigma_min), "LineWidth", 2, "Color", [0 1 0])
        xlabel("Iteration")
        ylabel("Singular value of A")

    
    subplot(224)
    semilogy(abs(xmax), "LineWidth", 2, "Color", [0.6350 0.0780 0.1840])
    semilogy(abs(xmin), "LineWidth", 2, "Color", [1 0 0])
    semilogy(abs(x), "k.")
        xlabel("Iteration")
        ylabel("xand his 

    
    xlabel("Iteration")
    ylabel("Intern values of the bounds")
    legend("lambda max", "lambda min", "sigma max", "sigma min", "xmax", "xmin")
    
    % Plot positive eigenvalue
    figure()
    subplot(211)
    semilogy(limit(4,:)', "LineWidth", 3)
    hold on
    semilogy(limit(3,:)', "LineWidth", 3)
    tmp = eigenvalue';
    tmp(tmp<0) = NaN; % Negative eigenvalue are set at NaN in order to have gaps when we display them
    semilogy(tmp, "k.")
    xlabel("Iteration")
    ylabel("Eigenvalues and bounds")
    legend("Inferior positive bound", "Superior positive bound", "Eigenvalues")
    
    if exist("d1") & exist("d2")
        title("Positive eigenvalues, (d1 = " + sprintf("%7.1e", d1) + "), (d2 = " + sprintf("%7.1e", d2) + ")")
    elseif exist("d1")
        title("Positive eigenvalues, (d1 = " + sprintf("%7.1e", d1) + ")")
    elseif exist("d2")
        title("Positive eigenvalues, (d2 = " + sprintf("%7.1e", d2) + ")")
    else
        title("Positive eigenvalues)")
    end
    
    subplot(212)
    plot(nu_max, "LineWidth", 2, "Color", [0 0 1])
    hold on
    plot(nu_min, "LineWidth", 2, "Color", [0.3010 0.7450 0.9330])
    plot(sigma_max, "LineWidth", 2, "Color", [0.4660 0.6740 0.1880])
    plot(sigma_min, "LineWidth", 2, "Color", [0 1 0])
    plot(xmax, "LineWidth", 2, "Color", [0.6350 0.0780 0.1840])
    plot(xmin, "LineWidth", 2, "Color", [1 0 0])
    plot(zmax, "LineWidth", 2, "Color", [0.8500 0.3250 0.0980])
    plot(zmin, "LineWidth", 2, "Color", [0.9290 0.6940 0.1250])
    
    xlabel("Iteration")
    ylabel("Intern values of the bounds")
    legend("nu max", "nu min", "sigma max", "sigma min", "xmax", "xmin", "zmax", "zmin")
    

end